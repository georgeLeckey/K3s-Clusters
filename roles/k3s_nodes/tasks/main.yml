---
- name: Fetch Token from Initial Server
  ansible.builtin.synchronize:
    src: /var/lib/rancher/k3s/server/token
    dest: /home/vagrant    
  delegate_to: "{{ groups['server_initial'][0] }}"
  when: inventory_hostname != groups['server_initial'][0]

- name: Set Token Variable
  ansible.builtin.shell: 
    cmd: "K3s_TOKEN=$(cat /home/vagrant/token)"
  delegate_to: "{{ inventory_hostname }}"
  when: inventory_hostname != groups['server_initial'][0]

- name: Check if k3s is installed
  ansible.builtin.stat:
    path: /usr/local/bin/k3s
  register: k3s_installed

- name: Uninstall k3s Server if already installed
  ansible.builtin.shell: /usr/local/bin/k3s-uninstall.sh
  args:
    executable: /bin/bash
  when: 
  - k3s_installed.stat.exists
  - inventory_hostname in groups['servers']

- name: Wait for First Server Node to be Ready
  ansible.builtin.shell:
    cmd: "kubectl get node {{ k3s_node_name }} -o=jsonpath='{.status.conditions[?(@.type==\"Ready\")].status}'"
  register: k3s_node_ready
  until: k3s_node_ready.stdout == "True"
  retries: 12
  delay: 10
  vars:
    k3s_node_name: "server1"
  delegate_to: "{{ groups['server_initial'][0] }}"
  when: inventory_hostname != groups['server_initial'][0]

- name: Debug K3s Node Ready
  ansible.builtin.debug:
    msg: "{{ k3s_node_ready }}"

- name: Run k3s Installation Script
  ansible.builtin.shell:
    cmd: |
      curl -sfL https://get.k3s.io | \
      {% if role == 'init' %}
      sh -s - server --cluster-init --tls-san=https://{{ tls_san }}:6443 \
      {% else %}
      K3S_TOKEN=$(cat token) sh -s \
      {% if role == 'agent' %}
        - agent --server https://192.168.56.11:6443 \
      {% elif role == 'add' %}
       - server --server https://192.168.56.11:6443 --tls-san={{ tls_san }} \
      {% endif %}
       --node-external-ip=192.168.56.11 \
      {% endif %}
      --flannel-iface=eth1 {% if role != 'agent' %} --write-kubeconfig-mode="644" {% endif %}
  register: k3s_installation

- name: Print k3s Installation Script command
  ansible.builtin.debug:
    msg: "{{ k3s_installation.cmd }}"

- name: Check if K3s installation succeeded
  debug:
    msg: "K3s installed successfully"
  when: k3s_installation.rc == 0

- name: Append export statement to .bashrc
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    line: "export KUBECONFIG=/etc/rancher/k3s/k3s.yaml"
    create: yes
  become: yes
  become_user: vagrant

- name: Helm Install Script
  shell: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh && rm get_helm.sh
  args:
    executable: /bin/bash
  when: inventory_hostname == groups['server_initial'][0]